local showing_map = false
local won

local triangle_score = 0
local village_score = 0
local heal_cell_score = 0
local village2_score = 0
local village3_score = 0
local turn_counter = 0

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function show_endscreen()
	gui.set_position(gui.get_node("background"), vmath.vector3(960, 540, 0))
	gui.set_position(gui.get_node("continue"), vmath.vector3(960, 400, 0))
	gui.set_position(gui.get_node("anim"), vmath.vector3(960, 540, 0))
	gui.set_position(gui.get_node("turn_counter"), vmath.vector3(960, 640, 0))
	gui.set_position(gui.get_node("statistics"), vmath.vector3(960, 1000, 0))
end

function hide_endscreen()
	gui.set_position(gui.get_node("background"), vmath.vector3(960, -540, 0))
	gui.set_position(gui.get_node("continue"), vmath.vector3(960, -400, 0))
	gui.set_position(gui.get_node("anim"), vmath.vector3(960, -540, 0))
	gui.set_position(gui.get_node("turn_counter"), vmath.vector3(960, -640, 0))
	gui.set_position(gui.get_node("statistics"), vmath.vector3(960, -1000, 0))
end

function on_message(self, message_id, message, sender)
	show_endscreen()
	msg.post(".", "acquire_input_focus")
	msg.post("/camera_body", "acquire_input_focus")
	if message_id == hash("game_won") then
		gui.play_flipbook(gui.get_node("anim"), hash("you_won"))
		won = true
		msg.post("/sound#sound_gate", "play_gated_sound", {soundcomponent = "/sound#won_theme",  gain = 0.02*message.volume, delay = 0.2, pan = -1.0, speed = 0.7})
		triangle_score = message.triangle_score
		village_score = message.village_score
		heal_cell_score = message.heal_cell_score
		village2_score = message.village2_score
		village3_score = message.village3_score
		gui.set_text(gui.get_node("turn_counter"), "You have survived")
		gui.set_text(gui.get_node("triangle_score"), triangle_score .. " structure created")
		gui.set_text(gui.get_node("village_score"), village_score .. " village created")
		gui.set_text(gui.get_node("heal_cell_score"), heal_cell_score .. " healed cells")
	elseif message_id == hash("game_lost") then
		gui.play_flipbook(gui.get_node("anim"), hash("you_lost"))
		won = false
		msg.post("/sound#sound_gate", "play_gated_sound", {soundcomponent = "/sound#lost_theme",  gain = 0.02*message.volume, delay = 0.2, pan = -1.0, speed = 0.7})
		triangle_score = message.triangle_score
		village_score = message.village_score
		heal_cell_score = message.heal_cell_score
		village2_score = message.village2_score
		village3_score = message.village3_score
		turn_counter = message.turn_counter
		gui.set_text(gui.get_node("turn_counter"), "You survived " .. turn_counter .. " turn")
		gui.set_text(gui.get_node("triangle_score"), triangle_score .. " structure created")
		gui.set_text(gui.get_node("village_score"), village_score .. " village created")
		gui.set_text(gui.get_node("heal_cell_score"), heal_cell_score .. " healed cells")
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed

	if action_id == hash("touch_left") and action.pressed then
		if not showing_map and (gui.pick_node(gui.get_node("text_to_open_statistic"), action.x, action.y) 
		or gui.pick_node(gui.get_node("arrow"), action.x, action.y)) then
			gui.set_alpha(gui.get_node("triangle_score"), 1)
			gui.set_alpha(gui.get_node("village_score"), 1)
			gui.set_alpha(gui.get_node("heal_cell_score"), 1)
		elseif showing_map and gui.pick_node(gui.get_node("restart"), action.x, action.y) then
			msg.post("/game#board", "reset_game")
			msg.post("/gui#main", "hide_abilities")
			msg.post("/camera_body", "reset_camera")
			msg.post(".", "release_input_focus")
			gui.set_position(gui.get_node("restart"), vmath.vector3(100, -100, 0))
			showing_map = false
		else
			hide_endscreen()
			gui.set_position(gui.get_node("restart"), vmath.vector3(100, 100, 0))
			showing_map = true
			if won then
				msg.post("/game#board", "clear_corruption")
			end
		end
	end
	return true
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
