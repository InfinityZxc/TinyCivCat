local tile_types = {hash("test_hex_blue"), hash("test_hex_green")}

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	local node1 = gui.get_node("gui_tile1")
	local node2 = gui.get_node("gui_tile2")
	local node3 = gui.get_node("gui_tile3")
	gui.play_flipbook(node1, tile_types[math.random(#tile_types)])
	gui.play_flipbook(node2, tile_types[math.random(#tile_types)])
	gui.play_flipbook(node3, tile_types[math.random(#tile_types)])
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
	if message_id == hash("gui_input") then
		msg.post(".", "acquire_input_focus")
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	-- msg.post(".", "acquire_input_focus")
	-- print("gui input")
	local node1 = gui.get_node("gui_tile1")
	local node2 = gui.get_node("gui_tile2")
	local node3 = gui.get_node("gui_tile3")
	local node
	if action_id == hash("touch_left") and action.pressed then
		if gui.pick_node(node1, action.x, action.y) then
			node = node1
		elseif gui.pick_node(node2, action.x, action.y) then
			node = node2
		elseif gui.pick_node(node3, action.x, action.y) then
			node = node3
		end
		if node then
			local type = gui.get_flipbook(node)
			if type == hash("test_hex_green") then
				type = hash("green")
			else
				type = hash("blue")
			end
			local pos = vmath.vector3()
			pos.x = action.x
			pos.y = action.y
			pos.z = 0
			msg.post("/game#board", "new_tile", { position = pos, type = type })
			gui.play_flipbook(node, tile_types[math.random(#tile_types)])
			return true
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
