go.property("tile_type", hash("none"))
go.property("visible_stats", false)

function change_tile(self, type)
	msg.post("/game#board", "update_tile", {new_type = type, old_type = self.tile_type})
	self.tile_type = type
end

function init(self)
	msg.post("#sprite", "play_animation", { id = hash(self.tile_type) })
	local xscale = go.get("#sprite", "scale.x")
	local yscale = go.get("#sprite", "scale.y")
	go.set("#sprite", "scale.x", xscale / 2)
	go.set("#sprite", "scale.y", yscale / 2)
	--go.set("#coin_sprite", "scale", vmath.vector3(0.125 , 0.125, 1))
	--msg.post("#coin_sprite" , "disable")
	--msg.post("#production_label" , "disable")
end

function final(self)
	
end

function update(self, dt)
	
end

function on_message(self, message_id, message, sender)
	if message_id == hash("change_type") then
		if self.tile_type == hash("rock") then
			msg.post("#sprite", "play_animation", { id = hash("wood") })
			change_tile(self, hash("wood"))
		elseif self.tile_type == hash("wood") then
			msg.post("#sprite", "play_animation", { id = hash("wood") })
			change_tile(self, hash("wood"))
		else 
			msg.post("#sprite", "play_animation", { id = hash("rock") })
			change_tile(self, hash("rock"))
		end
		--[[
	elseif message_id == hash("change_stats_visibility") then
		if self.visible_stats then
			msg.post("#coin_sprite" , "disable")
			msg.post("#production_label" , "disable")
		else
			msg.post("#coin_sprite" , "enable")
			msg.post("#production_label" , "enable")
		end
		self.visible_stats = not self.visible_stats
		--]]
	end
end

function on_input(self, action_id, action)
	
end

function on_reload(self)
	
end
