local step = hash("start")
local skip = false;
local TILES_TEXT = "I want this world to be beautiful and peaceful.\nLet's ennoble it with water forests and mountains.\nTheese are your tiles to build the world with.\nEvery turn you can drag one of the available tiles\nto place it adjacent with any other tile on the map.\nRight click on the tile to change it for 40 coins.\n(Click anywhere to continue...)"
local COINS_TEXT = "There used to be people and their villages here.\nThey gave coins to meet their needs, and they\ngrew if there were enough resources. But\nI got rid of them, I wanted peace and quiet.\nSo you don't need coins\n(Click anywhere to continue...)"
local VILLAGE_TEXT = "It looks like they survived a few.\nYou can wait a bit and in a few turns\nI will destroy them\nSo for now, lay out a few tiles\n(Click anywhere to continue...)"
local VILLAGE_ASK_FOR_HELP = "Look, we just want to survive.\nThis old man destroyed all the people on the planet.\nYou can help us, in return we will collect energy\nfor you in the form of coins. Good?\n(Click anywhere to continue...)"
local CORRUPTION_TEXT = "DID YOU HELP THEM PROGRESS?\nI created an infection that will devour\nevery cell of this world so that there will definitely\nbe no people left. For the fact that\nyou helped them, you will remain in\n this world. See you no more\n(Click anywhere to continue...)"
local ABILITIES_TEXT = "To fight back against corruption you have two\n abilities. Lightning will clear corruption from the tile\nof your choice. To use it, click once on the lightning\nand again on the tile you wish to restore.\nFreeze will stop corruption spread for 1 turn.\nDrag the map around to see the rest of the world.\nPlease save us (Click anywhere to continue...)"

-- function init(self)
-- end

function hide_tutorial()
	local node = gui.get_node("shadow1")
	local pos = gui.get_position(node)
	pos.y = pos.y - 10800
	gui.set_position(node, pos)

	local node = gui.get_node("shadow2")
	local pos = gui.get_position(node)
	pos.y = pos.y - 10800
	gui.set_position(node, pos)

	local node = gui.get_node("shadow3")
	local pos = gui.get_position(node)
	pos.y = pos.y - 10800
	gui.set_position(node, pos)

	local node = gui.get_node("shadow4")
	local pos = gui.get_position(node)
	pos.y = pos.y - 10800
	gui.set_position(node, pos)

	local node = gui.get_node("dialogue_window")
	local pos = gui.get_position(node)
	pos.y = pos.y - 10800
	gui.set_position(node, pos)

	local node = gui.get_node("evil_mage")
	local pos = gui.get_position(node)
	pos.y = pos.y - 10800
	gui.set_position(node, pos)
	
end

function show_tutorial()
	local node = gui.get_node("shadow1")
	local pos = gui.get_position(node)
	pos.y = pos.y + 10800
	gui.set_position(node, pos)

	local node = gui.get_node("shadow2")
	local pos = gui.get_position(node)
	pos.y = pos.y + 10800
	gui.set_position(node, pos)

	local node = gui.get_node("shadow3")
	local pos = gui.get_position(node)
	pos.y = pos.y + 10800
	gui.set_position(node, pos)

	local node = gui.get_node("shadow4")
	local pos = gui.get_position(node)
	pos.y = pos.y + 10800
	gui.set_position(node, pos)
end

function hide_shadows()
	local node = gui.get_node("shadow1")
	local pos = gui.get_position(node)
	pos.y = pos.y - 10800
	gui.set_position(node, pos)

	local node = gui.get_node("shadow2")
	local pos = gui.get_position(node)
	pos.y = pos.y - 10800
	gui.set_position(node, pos)

	local node = gui.get_node("shadow3")
	local pos = gui.get_position(node)
	pos.y = pos.y - 10800
	gui.set_position(node, pos)

	local node = gui.get_node("shadow4")
	local pos = gui.get_position(node)
	pos.y = pos.y - 10800
	gui.set_position(node, pos)
end

function tutorial_tiles()
	local node = gui.get_node("shadow1")
	local size = gui.get_size(node)
	size.x = 1721
	gui.set_size(node, size)

	local node = gui.get_node("shadow2")
	local size = gui.get_size(node)
	size.x = 199
	size.y = 49
	gui.set_size(node, size)

	local node = gui.get_node("shadow3")
	local size = gui.get_size(node)
	size.x = 199
	size.y = 702
	gui.set_size(node, size)

	local node = gui.get_node("shadow4")
	local size = gui.get_size(node)
	size.x = 41
	size.y = 329
	gui.set_size(node, size)
	local pos = gui.get_position(node)
	pos.y = 378
	gui.set_position(node, pos)

	local t = gui.get_node("dialogue_window")
	local pos = gui.get_position(t)
	pos.y = 740
	local scale = gui.get_scale(t)
	scale.y = 0.6
	gui.set_scale(t, scale)
	gui.set_position(t, pos)

	local t = gui.get_node("mage_words")
	local scale = gui.get_scale(gui.get_node("dialogue_window"))
	scale.y = 0.3
	scale.x = 0.26
	gui.set_scale(t, scale)
	gui.set_text(t, TILES_TEXT)

	local t = gui.get_node("evil_mage")
	local pos = gui.get_position(t)
	pos.y = 380
	gui.set_position(t, pos)
	
	step = hash("tiles")
end

function tutorial_coins()
	local node = gui.get_node("shadow1")
	local size = gui.get_size(node)
	size.x = 1547
	gui.set_size(node, size)

	local node = gui.get_node("shadow2")
	local size = gui.get_size(node)
	size.x = 373
	size.y = 937
	gui.set_size(node, size)

	local node = gui.get_node("shadow3")
	local size = gui.get_size(node)
	size.x = 373
	size.y = 16
	gui.set_size(node, size)

	local node = gui.get_node("shadow4")
	local size = gui.get_size(node)
	size.x = 30
	size.y = 127
	gui.set_size(node, size)
	local pos = gui.get_position(node)
	pos.y = 1064
	gui.set_position(node, pos)

	local t = gui.get_node("dialogue_window")
	local pos = gui.get_position(t)
	pos.y = 740
	pos.x = 1440
	gui.play_flipbook(t, hash("dialogue_window_reversed"))
	local scale = gui.get_scale(t)
	scale.y = 0.45
	gui.set_scale(t, scale)
	gui.set_position(t, pos)

	local t = gui.get_node("mage_words")
	local scale = gui.get_scale(gui.get_node("dialogue_window"))
	scale.y = 0.3
	scale.x = 0.26
	gui.set_scale(t, scale)
	gui.set_text(t, COINS_TEXT)

	local t = gui.get_node("evil_mage")
	local pos = gui.get_position(t)
	pos.y = 380
	pos.x = 1740
	gui.set_position(t, pos)
	
	step = hash("coins")
end

function tutorial_village()
	--[[
	local node = gui.get_node("shadow1")
	local size = gui.get_size(node)
	size.x = 860
	gui.set_size(node, size)
	local pos = gui.get_position(node)
	pos.x = pos.x
	pos.y = pos.y
	gui.set_position(node, pos)
	

	local node = gui.get_node("shadow2")
	local size = gui.get_size(node)
	size.x = 1080
	size.y = 484
	gui.set_size(node, size)
	local pos = gui.get_position(node)
	pos.x = pos.x + 20
	pos.y = pos.y + 50
	gui.set_position(node, pos)

	local node = gui.get_node("shadow3")
	local size = gui.get_size(node)
	size.x = 1080
	size.y = 455
	gui.set_size(node, size)
	local pos = gui.get_position(node)
	pos.x = pos.x + 20
	pos.y = pos.y + 70
	gui.set_position(node, pos)

	local node = gui.get_node("shadow4")
	local size = gui.get_size(node)
	size.x = 1920 - 800 - 124
	size.y = 162
	gui.set_size(node, size)
	local pos = gui.get_position(node)
	pos.y = 1080 - 385
	pos.x = pos.x + 125
	gui.set_position(node, pos)
	--]]
	hide_shadows(self)

	local t = gui.get_node("dialogue_window")
	local pos = gui.get_position(t)
	pos.y = 740
	pos.x = 1440
	gui.play_flipbook(t, hash("dialogue_window_reversed"))
	local scale = gui.get_scale(t)
	scale.y = 0.45
	gui.set_scale(t, scale)
	gui.set_position(t, pos)

	local t = gui.get_node("mage_words")
	local scale = gui.get_scale(gui.get_node("dialogue_window"))
	scale.y = 0.3
	scale.x = 0.26
	gui.set_scale(t, scale)
	gui.set_text(t, VILLAGE_TEXT)

	local t = gui.get_node("evil_mage")
	local pos = gui.get_position(t)
	pos.y = 380
	pos.x = 1740
	gui.set_position(t, pos)

	step = hash("village")
end

function villager_help()
	local t = gui.get_node("dialogue_window")
	local pos = gui.get_position(t)
	pos.y = 740
	pos.x = 400
	gui.play_flipbook(t, hash("dialogue_window"))
	local scale = gui.get_scale(t)
	scale.y = 0.45
	gui.set_scale(t, scale)
	gui.set_position(t, pos)

	local t = gui.get_node("mage_words")
	local scale = gui.get_scale(gui.get_node("dialogue_window"))
	scale.y = 0.3
	scale.x = 0.26
	gui.set_scale(t, scale)
	gui.set_text(t, VILLAGE_ASK_FOR_HELP)

	local t = gui.get_node("evil_mage")
	local pos = gui.get_position(t)
	gui.play_flipbook(t, hash("traveller"))
	pos.y = 380
	pos.x = 140
	gui.set_position(t, pos)

	step = hash("villager_help")
end
	

function tutorial_corruption()
	local node = gui.get_node("shadow1")
	local size = gui.get_size(node)
	gui.set_size(node, size)

	local node = gui.get_node("shadow2")
	local size = gui.get_size(node)
	gui.set_size(node, size)

	local node = gui.get_node("shadow3")
	local size = gui.get_size(node)
	gui.set_size(node, size)

	local node = gui.get_node("shadow4")
	local size = gui.get_size(node)
	gui.set_size(node, size)
	local pos = gui.get_position(node)
	gui.set_position(node, pos)

	local t = gui.get_node("dialogue_window")
	local pos = gui.get_position(t)
	pos.y = 740
	pos.x = 1440
	gui.play_flipbook(t, hash("dialogue_window_reversed"))
	local scale = gui.get_scale(t)
	scale.y = 0.45
	gui.set_scale(t, scale)
	gui.set_position(t, pos)

	local t = gui.get_node("mage_words")
	local scale = gui.get_scale(gui.get_node("dialogue_window"))
	scale.y = 0.3
	scale.x = 0.26
	gui.set_scale(t, scale)
	gui.set_text(t, CORRUPTION_TEXT)

	local t = gui.get_node("evil_mage")
	local pos = gui.get_position(t)
	gui.play_flipbook(t, hash("evil_mage_beginning"))
	pos.y = 380
	pos.x = 1740
	gui.set_position(t, pos)

	step = hash("corruption")
end

function tutorial_abilities()
	show_tutorial(self)
	
	msg.post("/gui#main", "show_abilities")
	local node = gui.get_node("shadow1")
	local size = gui.get_size(node)
	size.x = 1740
	gui.set_size(node, size)

	local node = gui.get_node("shadow2")
	local size = gui.get_size(node)
	size.x = 200
	size.y = 320
	gui.set_size(node, size)

	local node = gui.get_node("shadow3")
	local size = gui.get_size(node)
	size.x = 200
	size.y = 400
	gui.set_size(node, size)

	local node = gui.get_node("shadow4")
	local size = gui.get_size(node)
	size.x = 190
	size.y = 400
	local pos = gui.get_position(node)
	pos.y = pos.y + 70
	gui.set_position(node, pos)
	gui.set_size(node, size)

	local t = gui.get_node("dialogue_window")
	local pos = gui.get_position(t)
	pos.y = 740
	pos.x = 400
	gui.play_flipbook(t, hash("dialogue_window"))
	local scale = gui.get_scale(t)
	scale.y = 0.45
	gui.set_scale(t, scale)
	gui.set_position(t, pos)

	local t = gui.get_node("mage_words")
	local scale = gui.get_scale(gui.get_node("dialogue_window"))
	scale.y = 0.3
	scale.x = 0.26
	gui.set_scale(t, scale)
	gui.set_text(t, ABILITIES_TEXT)

	local t = gui.get_node("evil_mage")
	local pos = gui.get_position(t)
	gui.play_flipbook(t, hash("traveller"))
	pos.y = 380
	pos.x = 140
	gui.set_position(t, pos)
	
	step = hash("abilities")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
	if message_id == hash("corruption") then
		if skip then
			msg.post("/gui#main", "show_abilities")
		else
			msg.post(".", "acquire_input_focus")
			msg.post("/cursor#cursor", "acquire_input_focus")
			--msg.post('/camera_body', 'tutorial_corruption', message)
			show_tutorial()
			tutorial_corruption()
		end
	elseif message_id == hash("village") then
		if not skip then
			msg.post(".", "acquire_input_focus")
			msg.post("/cursor#cursor", "acquire_input_focus")
			--msg.post('/camera_body', 'tutorial_corruption', message)
			show_tutorial()
			tutorial_village()
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	if action_id == hash("touch_left") and action.pressed then
		if step == hash("start") then
			gui.set_font(gui.get_node("text"), hash("main"))
			gui.set_scale(gui.get_node("text"), vmath.vector3(1))
			tutorial_tiles()
			gui.delete_node(gui.get_node("to_begin_text"))
			gui.delete_node(gui.get_node("text"))
		elseif step == hash("tiles") then
			tutorial_coins()
		elseif step == hash("coins") then
			hide_tutorial()
			msg.post(".", "release_input_focus")
		elseif step == hash("village") then
			villager_help()
		elseif step == hash("villager_help") then
			hide_tutorial()
			msg.post(".", "release_input_focus")
		elseif step == hash("corruption") then
			tutorial_abilities()
		elseif step == hash("abilities") then
			hide_tutorial()
			msg.post(".", "release_input_focus")
			msg.post("/camera_body", "acquire_input_focus")
			msg.post("/game#board", "acquire_input_focus")
			msg.post("/gui#main", "acquire_input_focus")
			msg.post("/cursor#cursor", "acquire_input_focus")
			skip = true
		end
	end
	return true;
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
